name: Build

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target: ['NT','DOS']
        build-type: ['LBA2HD','LBA2DEMO','DEBUG']

    runs-on: windows-latest

    steps:
      - name: Setup Open Watcom v2.0
        uses: open-watcom/setup-watcom@v0
        with:
          version: "2.0-64"

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x86

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Open Watcom environment
        run: |
          echo "INCLUDE=$env:WATCOM\H;$env:WATCOM\H\NT;$env:WATCOM\H\NT\DIRECTX;$env:WATCOM\H\NT\DDK;$env:INCLUDE" >> $env:GITHUB_ENV
          echo "EDPATH=$env:WATCOM\EDDAT" >> $env:GITHUB_ENV
          echo "WHTMLHELP=$env:WATCOM\BINNT\HELP" >> $env:GITHUB_ENV
          echo "WIPFC=$env:WATCOM\WIPFC" >> $env:GITHUB_ENV

      - name: Setup environment variables
        run: |
          echo "LIB386_PATH=$env:GITHUB_WORKSPACE\LIB386" >> $env:GITHUB_ENV
          echo "INCLUDE=$env:GITHUB_WORKSPACE\LIB386;$env:GITHUB_WORKSPACE\LIB386\H;$env:INCLUDE" >> $env:GITHUB_ENV

      - name: Print environment variables
        run: |
          echo "GITHUB_WORKSPACE: $env:GITHUB_WORKSPACE"
          echo "PATH: $env:PATH"
          echo "WATCOM: $env:WATCOM"
          echo "LIB386_PATH: $env:LIB386_PATH"
          echo "INCLUDE: $env:INCLUDE"

      - name: Build LBA2
        run: |
          Push-Location "$env:GITHUB_WORKSPACE\SOURCES"
          wmake clean
          wmake "BT=${{ matrix.target }}" "${{ matrix.build-type }}=1"
          Pop-Location

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LBA2-${{ matrix.target }}-${{ matrix.build-type }}
          path: SOURCES\BUILD\LBA2_${{ matrix.target }}_${{ matrix.build-type }}.exe
